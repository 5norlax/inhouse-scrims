{"version":3,"sources":["../../module/src/matchmaking.js","../../module/src/draft.js","../../module/src/analyze.js","components/Input.js","app/index.js","utils/output.js","reportWebVitals.js","index.js","../../module/src/utils/enums.js","../../module/src/index.js","../../module/src/utils/validate.js"],"names":["require","MMR","MMR_MODIFIER","ROLES_BY_INDEX","draft","analyze","getRoleStatusArray","players","map","player","i","role","status","roles","length","getDraftMetadata","lobby","x","rolesBreakdown","mmrBreakdown","elo","team1Players","slice","team2Players","team1Mmr","reduce","y","team2Mmr","avgDelta","deltas","push","Math","abs","a","b","getAverageDelta","medianDelta","sort","getMedianDelta","roleScore","delta","avgLaneDiff","max","skillLevel","prettyRank","division","match","charAt","toUpperCase","module","exports","data","mmr","autofill","Set","JSON","stringify","games","game","roster","metadata","team1","top","jug","mid","bot","sup","team2","red","blue","prettyOutput","lobbies","array","result","p","temp","splice","concat","permutation","autofillCount","filter","includes","autofillCountThreshold","autofillProtection","quantile","arr","q","sorted","pos","base","floor","rest","undefined","options","avgLaneDiffThreshold","filterAvgLaneDiff","roleScoreThreshold","filterRoleScore","deltaValuesThreshold","filterDelta","skillLevelThreshold","filterSkillLevel","SummonerInput","summoner","handleChange","type","value","name","onChange","e","selected","App","useState","output","setOutput","setPlayers","summoners","target","split","onSubmit","preventDefault","func","inhouse","namePadding","Object","keys","eloPadding","padEnd","padStart","toString","generateAdvancedOutput","message","onClick","Array","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","freeze","inputSchema","matchmaking","input","validateSync","yup","required","min","of","object","string","lowercase","matches"],"mappings":"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","file":"static/js/main.bcd4ef38.chunk.js","sourcesContent":["const { \n  MMR, \n  MMR_MODIFIER, \n  ROLES_BY_INDEX \n} = require('./utils/enums')\nconst draft = require('./draft')\nconst analyze = require('./analyze')\n\nconst getAverageDelta = (mmrBreakdown) => {\n  let deltas = []\n  for (let i = 0; i < 5; i++) {\n    deltas.push(Math.abs(mmrBreakdown[i] - mmrBreakdown[i+5]))\n  }\n  return deltas.reduce((a, b) => a + b) / 10;\n}\n\nconst getMedianDelta = (mmrBreakdown) => {\n  let deltas = []\n  for (let i = 0; i < 5; i++) {\n    deltas.push(Math.abs(mmrBreakdown[i] - mmrBreakdown[i+5]))\n  }\n  return deltas.sort()[3];\n}\n\nconst getRoleStatusArray = (players) => {\n  return players.map((player, i) => {\n    let role = ROLES_BY_INDEX[i]\n    let status = 'autofill'\n    if (player.roles.length === 0)\n      status = 'fill'\n    if (player.roles[0] === role)\n      status = 'primary'\n    if (player.roles[1] && player.roles[1] === role)\n      status = 'secondary'\n    return status\n  })\n}\n\nconst getDraftMetadata = (draft, players) => {\n  const lobby = draft.map(x => players[x])\n  const rolesBreakdown = getRoleStatusArray(lobby)\n  const mmrBreakdown = lobby.map((x,i) => MMR[x.elo]*MMR_MODIFIER[rolesBreakdown[i]])\n  const team1Players = lobby.slice(0, 5)\n  const team2Players = lobby.slice(5)\n  const team1Mmr = team1Players.reduce((x, y, i) => x + mmrBreakdown[i], 0)\n  const team2Mmr = team2Players.reduce((x, y, i) => x + mmrBreakdown[i+5], 0)\n  const avgDelta = getAverageDelta(mmrBreakdown)\n  const medianDelta = getMedianDelta(mmrBreakdown)\n  const roleScore = rolesBreakdown.map(x => {\n    if (x === 'primary')\n      return 2\n    if (x === 'secondary')\n      return 1\n    else\n      return 0\n  }).reduce((a, b) => a + b, 0)\n  return {\n    draft,\n    team1Mmr,\n    team2Mmr,\n    roleScore,\n    delta: Math.abs(team1Mmr - team2Mmr),\n    avgLaneDiff: Math.max(avgDelta, medianDelta),\n    skillLevel: team1Mmr + team2Mmr\n  }\n}\n\nconst prettyRank = (elo) => {\n  const ranks = {\n    1: 'i',\n    2: 'ii',\n    3: 'iii',\n    4: 'iv'\n  }\n  const division = elo.match(/\\d+$/)\n  if (division) {\n    return `${elo.charAt(0).toUpperCase() + elo.slice(1,-1)} ${ranks[division[0]].toUpperCase()}`\n  } else {\n    return elo.charAt(0).toUpperCase() + elo.slice(1)\n  }\n}\n\nconst prettyOutput = (game, players) =>{\n  const roster = game.draft.map(x => players[x])\n  const rolesBreakdown = getRoleStatusArray(roster)\n  const mmrBreakdown = roster.map((x,i) => MMR[x.elo]*MMR_MODIFIER[rolesBreakdown[i]])\n  const { team1Mmr, team2Mmr, draft, ...metadata } = game\n  const team1 = {\n    roster: {\n      top: { ...roster[0], autofill: rolesBreakdown[0] === 'autofill' ? true : false, mmr: mmrBreakdown[0], elo: prettyRank(roster[0].elo) },\n      jug: { ...roster[1], autofill: rolesBreakdown[1] === 'autofill' ? true : false, mmr: mmrBreakdown[1], elo: prettyRank(roster[1].elo) },\n      mid: { ...roster[2], autofill: rolesBreakdown[2] === 'autofill' ? true : false, mmr: mmrBreakdown[2], elo: prettyRank(roster[2].elo) },\n      bot: { ...roster[3], autofill: rolesBreakdown[3] === 'autofill' ? true : false, mmr: mmrBreakdown[3], elo: prettyRank(roster[3].elo) },\n      sup: { ...roster[4], autofill: rolesBreakdown[4] === 'autofill' ? true : false, mmr: mmrBreakdown[4], elo: prettyRank(roster[4].elo) },\n    },\n    mmr: team1Mmr\n  }\n  const team2 = {\n    roster: {\n      top: { ...roster[5], autofill: rolesBreakdown[5] === 'autofill' ? true : false, mmr: mmrBreakdown[5], elo: prettyRank(roster[5].elo)  },\n      jug: { ...roster[6], autofill: rolesBreakdown[6] === 'autofill' ? true : false, mmr: mmrBreakdown[6], elo: prettyRank(roster[6].elo)  },\n      mid: { ...roster[7], autofill: rolesBreakdown[7] === 'autofill' ? true : false, mmr: mmrBreakdown[7], elo: prettyRank(roster[7].elo)  },\n      bot: { ...roster[8], autofill: rolesBreakdown[8] === 'autofill' ? true : false, mmr: mmrBreakdown[8], elo: prettyRank(roster[8].elo)  },\n      sup: { ...roster[9], autofill: rolesBreakdown[9] === 'autofill' ? true : false, mmr: mmrBreakdown[9], elo: prettyRank(roster[9].elo)  },\n    },\n    mmr: team2Mmr\n  }\n  const red = team1.mmr > team2.mmr ? team1 : team2\n  const blue = team1.mmr > team2.mmr ? team2 : team1\n  return {\n    red,\n    blue,\n    metadata\n  }\n}\n\n/**\n * matchmaking function\n * @param {Array.<Object>} data \n * @returns {Array.<Object>}\n */\nmodule.exports = function(data) {\n  const players = data.map(x => { return {...x, mmr: MMR[x.elo] }})\n  const roleDiversity = [... new Set(players.map(x => JSON.stringify(x.roles)))]\n  const autofill = roleDiversity.length <= 1 ? true : false\n  const drafts = draft(players, autofill)\n  const games = drafts.map(x => getDraftMetadata(x, players))\n  return analyze(games).map(game => prettyOutput(game, players))\n}","const { ROLES_BY_INDEX } = require('./utils/enums')\n\nconst permutation = (array) => {\n  function p(array, temp) {\n      var i, x\n      if (!array.length) {\n        result.push(temp)\n      }\n      if (array.length === 10) {\n        for (i = 0; i < 5; i++) {\n          x = array.splice(i, 1)[0]\n          p(array, temp.concat(x))\n          array.splice(i, 0, x)\n        }\n      } else {\n        for (i = 0; i < array.length; i++) {\n          x = array.splice(i, 1)[0]\n          p(array, temp.concat(x))\n          array.splice(i, 0, x)\n        }\n      }\n  }\n\n  var result = []\n  p(array, [])\n  return result\n}\n\nconst autofillProtection = (lobbies, players) => {\n  const autofillCount = lobbies.map(x => x.filter((y,i) => !(players[y].roles.length === 0 || players[y].roles.includes(ROLES_BY_INDEX[i]))).length)\n  const autofillCountSet = [...new Set(autofillCount)].sort((a,b) => a-b)\n  const autofillCountThreshold = autofillCountSet[0] \n  return lobbies.filter((x,i) => autofillCount[i] <= autofillCountThreshold)\n}\n\n/**\n * creates all combination of players/roles/teams, removes autofilled lobbies if possible\n * @param {Array.<Object>} players \n * @param {Boolean} autofill \n * @returns {Array.<number>}\n */\nmodule.exports = function(players, autofill) {\n  const fixedIndexArray = [0,1,2,3,4,5,6,7,8,9]\n  const lobbies = permutation(fixedIndexArray)\n  if (autofill)\n    return lobbies\n  else\n    return autofillProtection(lobbies, players)\n}","const quantile = (arr, q) => {\n  const sorted = arr.sort((a, b) => a - b)\n  const pos = (sorted.length - 1) * q\n  const base = Math.floor(pos)\n  const rest = pos - base\n  if (sorted[base + 1] !== undefined) {\n      return sorted[base] + rest * (sorted[base + 1] - sorted[base])\n  } else {\n      return sorted[base]\n  }\n}\n\nconst filterDelta = (lobbies, deltaValuesThreshold) => {\n  return lobbies.filter(x => x.delta <= deltaValuesThreshold)\n}\n\nconst filterAvgLaneDiff = (lobbies, avgLaneDiffThreshold) => {\n  return lobbies.filter(x => x.avgLaneDiff <= avgLaneDiffThreshold)\n}\n\nconst filterRoleScore = (lobbies, roleScoreThreshold) => {\n  return lobbies.filter(x => x.roleScore >= roleScoreThreshold)\n}\n\nconst filterSkillLevel = (lobbies, skillLevelThreshold) => {\n  return lobbies.filter(x => x.skillLevel >= skillLevelThreshold)\n}\n\n/**\n * reduces games array to only games satisfying top 25 percentile in various stats\n * @param {Array.<Object>} games \n * @returns {Array.<Object>}\n */\nmodule.exports = function(games) {\n  let options = games\n  const avgLaneDiffThreshold = quantile(options.map(x => x.avgLaneDiff),.25)\n  options = filterAvgLaneDiff(options, avgLaneDiffThreshold)\n  const roleScoreThreshold = quantile(options.map(x => x.roleScore),.75)\n  options = filterRoleScore(options, roleScoreThreshold)\n  const deltaValuesThreshold = quantile(options.map(x => x.delta),.10)\n  options = filterDelta(options, deltaValuesThreshold)\n  const skillLevelThreshold = quantile(options.map(x => x.skillLevel),.75)\n  options = filterSkillLevel(options, skillLevelThreshold)\n  return options.sort((a,b) => {\n    if (a.delta - b.delta === 0)\n      return b.skillLevel - a.skillLevel\n    return a.delta - b.delta\n  })\n}","\nexport default function SummonerInput({ summoner, i, handleChange }) {\n  return (\n    <div>\n      <label>\n        Name:\n        <input type=\"text\" value={summoner.name} name=\"name\" onChange={(e) => handleChange(e,i)} />\n      </label>\n      <label>\n        Elo:\n        <select name=\"elo\" value={summoner.elo} onChange={(e) => handleChange(e,i)}>\n          <option value=\"iron4\">Iron IV</option>\n          <option value=\"iron3\">Iron III</option>\n          <option value=\"iron\">Iron</option>\n          <option value=\"iron2\">Iron II</option>\n          <option value=\"iron1\">Iron I</option>\n          <option value=\"bronze4\">Bronze IV</option>\n          <option value=\"bronze3\">Bronze III</option>\n          <option value=\"bronze\">Bronze</option>\n          <option value=\"bronze2\">Bronze II</option>\n          <option value=\"bronze1\">Bronze I</option>\n          <option value=\"silver4\">Silver IV</option>\n          <option value=\"silver3\">Silver III</option>\n          <option value=\"silver\">Silver</option>\n          <option value=\"silver2\">Silver II</option>\n          <option value=\"silver1\">Silver I</option>\n          <option value=\"gold4\">Gold IV</option>\n          <option value=\"gold3\">Gold III</option>\n          <option selected value=\"gold\">Gold</option>\n          <option value=\"gold2\">Gold II</option>\n          <option value=\"gold1\">Gold I</option>\n          <option value=\"platinum4\">Platinum IV</option>\n          <option value=\"platinum3\">Platinum III</option>\n          <option value=\"platinum\">Platinum</option>\n          <option value=\"platinum2\">Platinum II</option>\n          <option value=\"platinum1\">Platinum I</option>\n          <option value=\"diamond4\">Diamond IV</option>\n          <option value=\"diamond3\">Diamond III</option>\n          <option value=\"diamond\">Diamond</option>\n          <option value=\"diamond2\">Diamond II</option>\n          <option value=\"diamond1\">Diamond I</option>\n          <option value=\"master\">Master</option>\n          <option value=\"grandmaster\">Grandmaster</option>\n          <option value=\"challenger\">Challenger</option>\n        </select>\n      </label>\n      <label>\n        Roles:\n        <select name=\"roles\" value={summoner.roles} onChange={(e) => handleChange(e,i)}>\n          <option selected value={[]}>Fill</option>\n          <option value={[\"top\"]}>TOP</option>\n          <option value={[\"top\", \"jug\"]}>TOP & JUG</option>\n          <option value={[\"top\", \"mid\"]}>TOP & MID</option>\n          <option value={[\"top\", \"bot\"]}>TOP & BOT</option>\n          <option value={[\"top\", \"sup\"]}>TOP & SUP</option>\n          <option value={[\"jug\"]}>JUG</option>\n          <option value={[\"jug\", \"top\"]}>JUG & TOP</option>\n          <option value={[\"jug\", \"mid\"]}>JUG & MID</option>\n          <option value={[\"jug\", \"bot\"]}>JUG & BOT</option>\n          <option value={[\"jug\", \"sup\"]}>JUG & SUP</option>\n          <option value={[\"mid\"]}>MID</option>\n          <option value={[\"mid\", \"top\"]}>MID & TOP</option>\n          <option value={[\"mid\", \"jug\"]}>MID & JUG</option>\n          <option value={[\"mid\", \"bot\"]}>MID & BOT</option>\n          <option value={[\"mid\", \"sup\"]}>MID & SUP</option>\n          <option value={[\"bot\"]}>BOT</option>\n          <option value={[\"bot\", \"top\"]}>BOT & TOP</option>\n          <option value={[\"bot\", \"jug\"]}>BOT & JUG</option>\n          <option value={[\"bot\", \"mid\"]}>BOT & MID</option>\n          <option value={[\"bot\", \"sup\"]}>BOT & SUP</option>\n          <option value={[\"sup\"]}>SUP</option>\n          <option value={[\"sup\", \"top\"]}>SUP & TOP</option>\n          <option value={[\"sup\", \"jug\"]}>SUP & JUG</option>\n          <option value={[\"sup\", \"mid\"]}>SUP & MID</option>\n          <option value={[\"sup\", \"bot\"]}>SUP & BOT</option>\n        </select>\n      </label>\n    </div>\n  )\n}\n","import func from 'lol-inhouse'\nimport { useState } from 'react'\n\nimport Input from '../components/Input'\n\nimport { /*generateOutput,*/ generateAdvancedOutput } from '../utils/output'\n\nfunction App() {\n\n  const [ output, setOutput ] = useState(null)\n  const [ players, setPlayers ] = useState([\n    {\n      \"name\": \"Buelow\",\n      \"elo\": \"diamond1\",\n      \"roles\": []\n    },\n    {\n      \"name\": \"Cbuelow\",\n      \"elo\": \"platinum4\",\n      \"roles\": [\"bot\", \"top\"]\n    },\n    {\n      \"name\": \"luckyc14\",\n      \"elo\": \"silver3\",\n      \"roles\": [\"jug\", \"sup\"]\n    },\n    {\n      \"name\": \"walter\",\n      \"elo\": \"platinum3\",\n      \"roles\": [\"jug\", \"mid\"]\n    },\n    {\n      \"name\": \"cal420swag\",\n      \"elo\": \"gold1\",\n      \"roles\": [\"bot\", \"jug\"]\n    },\n    {\n      \"name\": \"snxckz\",\n      \"elo\": \"gold4\",\n      \"roles\": []\n    },\n    {\n      \"name\": \"TurkeyAI\",\n      \"elo\": \"platinum1\",\n      \"roles\": [\"top\", \"jug\"]\n    },\n    {\n      \"name\": \"HIPP0B0SS\",\n      \"elo\": \"silver3\",\n      \"roles\": [\"top\", \"sup\"]\n    },\n    {\n      \"name\": \"redsledge\",\n      \"elo\": \"gold3\",\n      \"roles\": [\"sup\"]\n    },\n    {\n      \"name\": \"deku kid\",\n      \"elo\": \"gold4\",\n      \"roles\": []\n    }\n  ]) \n\n  const handleChange = (e, i) => {\n    const summoners = players\n    if (e.target.name === 'roles')\n      summoners[i][e.target.name] = e.target.value.split(',')\n    else\n      summoners[i][e.target.name] = e.target.value\n    setPlayers([...summoners])\n  }\n\n  const handleClear = () => {\n    setPlayers(Array.from({length: 10}, () => ({name: \"\", elo: \"gold\", roles: []})))\n    setOutput(null)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    try {\n      const output = func(players)\n      setOutput(generateAdvancedOutput(output[0]))\n    } catch (e) {\n      setOutput(e.message)\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {players.map((player,i) => <Input summoner={player} i={i} handleChange={handleChange} key={i} />)}\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <button onClick={handleClear}>Clear</button>\n      <pre>\n        {output}\n      </pre>\n    </div>\n  );\n}\n\nexport default App;\n","/**\n * Standard string output\n * @param {*} inhouse \n * @returns \n */\nexport const generateOutput = (inhouse) => {\n  const blue = inhouse.blue\n  const red = inhouse.red\n  const padding = Math.max(...[...Object.keys(red.roster).map(x => red.roster[x].name.length),...Object.keys(blue.roster).map(x => blue.roster[x].name.length)]) + 10\n  return `\n  |${'-'.padEnd((padding+1)*2,'-')}|\n  | ${'🔵 BLUE SIDE'}${''.padEnd(padding*2-23)}${'🔴 RED SIDE'} |\n  |${'-'.padEnd((padding+1)*2,'-')}|\n  | ${blue.roster.top.name}${'TOP'.padStart(padding-blue.roster.top.name.length)}${''.padEnd(padding-red.roster.top.name.length)}${red.roster.top.name} |\n  | ${blue.roster.jug.name}${'JUG'.padStart(padding-blue.roster.jug.name.length)}${''.padEnd(padding-red.roster.jug.name.length)}${red.roster.jug.name} |\n  | ${blue.roster.mid.name}${'MID'.padStart(padding-blue.roster.mid.name.length)}${''.padEnd(padding-red.roster.mid.name.length)}${red.roster.mid.name} |\n  | ${blue.roster.bot.name}${'BOT'.padStart(padding-blue.roster.bot.name.length)}${''.padEnd(padding-red.roster.bot.name.length)}${red.roster.bot.name} |\n  | ${blue.roster.sup.name}${'SUP'.padStart(padding-blue.roster.sup.name.length)}${''.padEnd(padding-red.roster.sup.name.length)}${red.roster.sup.name} |\n  |${'-'.padEnd((padding+1)*2,'-')}|\n  `\n}\n\n/**\n * Verbose string output\n * @param {*} inhouse \n * @returns \n */\nexport const generateAdvancedOutput = (inhouse) => {\n  const blue = inhouse.blue\n  const red = inhouse.red\n  const namePadding = Math.max(...[...Object.keys(red.roster).map(x => red.roster[x].name.length),...Object.keys(blue.roster).map(x => blue.roster[x].name.length)]) + 10\n  const eloPadding = Math.max(...[...Object.keys(red.roster).map(x => red.roster[x].elo.length),...Object.keys(blue.roster).map(x => blue.roster[x].elo.length)]) + 2\n  return `\n  |${'-'.padEnd(((namePadding*2)+(eloPadding*2)+50-23),'-')}|\n  | ${'🔵 BLUE SIDE'}${''.padEnd((namePadding*2)+(eloPadding*2)+25-23)}${'🔴 RED SIDE'} |\n  |${'-'.padEnd(((namePadding*2)+(eloPadding*2)+50-23),'-')}|\n  | - | ELO ${''.padEnd(eloPadding-5)}| MMR  | PLAYER ${''.padEnd(namePadding*2-14)} PLAYER |  MMR |${''.padEnd(eloPadding-4)} ELO | - |\n  |${'-'.padEnd(((namePadding*2)+(eloPadding*2)+50-23),'-')}|\n  | ${blue.roster.top.autofill ? '*' : '✔'} | ${blue.roster.top.elo}${'|'.padStart(eloPadding - blue.roster.top.elo.length)} ${blue.roster.top.mmr} ${'|'.padStart(5 - blue.roster.top.mmr.toString().length)} ${blue.roster.top.name}${'TOP'.padStart(namePadding-blue.roster.top.name.length)}${''.padEnd(namePadding-red.roster.top.name.length)}${red.roster.top.name} ${'|'.padEnd(5 - red.roster.top.mmr.toString().length)} ${red.roster.top.mmr} ${'|'.padEnd(eloPadding - red.roster.top.elo.length)} ${red.roster.top.elo} | ${red.roster.top.autofill ? '*' : '✔'} |\n  | ${blue.roster.jug.autofill ? '*' : '✔'} | ${blue.roster.jug.elo}${'|'.padStart(eloPadding - blue.roster.jug.elo.length)} ${blue.roster.jug.mmr} ${'|'.padStart(5 - blue.roster.jug.mmr.toString().length)} ${blue.roster.jug.name}${'JUG'.padStart(namePadding-blue.roster.jug.name.length)}${''.padEnd(namePadding-red.roster.jug.name.length)}${red.roster.jug.name} ${'|'.padEnd(5 - red.roster.jug.mmr.toString().length)} ${red.roster.jug.mmr} ${'|'.padEnd(eloPadding - red.roster.jug.elo.length)} ${red.roster.jug.elo} | ${red.roster.jug.autofill ? '*' : '✔'} |\n  | ${blue.roster.mid.autofill ? '*' : '✔'} | ${blue.roster.mid.elo}${'|'.padStart(eloPadding - blue.roster.mid.elo.length)} ${blue.roster.mid.mmr} ${'|'.padStart(5 - blue.roster.mid.mmr.toString().length)} ${blue.roster.mid.name}${'MID'.padStart(namePadding-blue.roster.mid.name.length)}${''.padEnd(namePadding-red.roster.mid.name.length)}${red.roster.mid.name} ${'|'.padEnd(5 - red.roster.mid.mmr.toString().length)} ${red.roster.mid.mmr} ${'|'.padEnd(eloPadding - red.roster.mid.elo.length)} ${red.roster.mid.elo} | ${red.roster.mid.autofill ? '*' : '✔'} |\n  | ${blue.roster.bot.autofill ? '*' : '✔'} | ${blue.roster.bot.elo}${'|'.padStart(eloPadding - blue.roster.bot.elo.length)} ${blue.roster.bot.mmr} ${'|'.padStart(5 - blue.roster.bot.mmr.toString().length)} ${blue.roster.bot.name}${'BOT'.padStart(namePadding-blue.roster.bot.name.length)}${''.padEnd(namePadding-red.roster.bot.name.length)}${red.roster.bot.name} ${'|'.padEnd(5 - red.roster.bot.mmr.toString().length)} ${red.roster.bot.mmr} ${'|'.padEnd(eloPadding - red.roster.bot.elo.length)} ${red.roster.bot.elo} | ${red.roster.bot.autofill ? '*' : '✔'} |\n  | ${blue.roster.sup.autofill ? '*' : '✔'} | ${blue.roster.sup.elo}${'|'.padStart(eloPadding - blue.roster.sup.elo.length)} ${blue.roster.sup.mmr} ${'|'.padStart(5 - blue.roster.sup.mmr.toString().length)} ${blue.roster.sup.name}${'SUP'.padStart(namePadding-blue.roster.sup.name.length)}${''.padEnd(namePadding-red.roster.sup.name.length)}${red.roster.sup.name} ${'|'.padEnd(5 - red.roster.sup.mmr.toString().length)} ${red.roster.sup.mmr} ${'|'.padEnd(eloPadding - red.roster.sup.elo.length)} ${red.roster.sup.elo} | ${red.roster.sup.autofill ? '*' : '✔'} |\n  |${'-'.padEnd(((namePadding*2)+(eloPadding*2)+50-23),'-')}|\n  | ${blue.mmr}${'TOTAL MMR'.padStart(namePadding+eloPadding+15-blue.mmr.toString().length)}${''.padEnd(namePadding+eloPadding+10-red.mmr.toString().length)}${red.mmr} |\n  |${'-'.padEnd(((namePadding*2)+(eloPadding*2)+50-23),'-')}|\n    ✔ denotes on-role\n    * denotes autofill\n  `\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const MMR = Object.freeze({\n  \"iron4\": 200,\n  \"iron3\": 400,\n  \"iron\": 600,\n  \"iron2\": 800,\n  \"iron1\": 1000,\n  \"bronze4\": 1100,\n  \"bronze3\": 1150,\n  \"bronze\":1200,\n  \"bronze2\":1250,\n  \"bronze1\":1300,\n  \"silver4\":1400,\n  \"silver3\":1450,\n  \"silver\":1500,\n  \"silver2\":1550,\n  \"silver1\":1600,\n  \"gold4\":1700,\n  \"gold3\":1750,\n  \"gold\":1800,\n  \"gold2\":1850,\n  \"gold1\":1900,\n  \"platinum4\":2000,\n  \"platinum3\":2050,\n  \"platinum\":2100,\n  \"platinum2\":2150,\n  \"platinum1\":2200,\n  \"diamond4\":2300,\n  \"diamond3\":2350,\n  \"diamond\":2400,\n  \"diamond2\":2450,\n  \"diamond1\":2500,\n  \"master\":2750,\n  \"grandmaster\":3000,\n  \"challenger\":3250\n})\n\nconst MMR_MODIFIER = Object.freeze({\n  \"fill\":1,\n  \"primary\":1,\n  \"secondary\": .9,\n  \"autofill\": .5,\n})\n\nconst ROLES_BY_INDEX = Object.freeze([\"top\", \"jug\", \"mid\", \"bot\", \"sup\", \"top\", \"jug\", \"mid\", \"bot\", \"sup\"])\n\n\nmodule.exports = { MMR_MODIFIER, MMR, ROLES_BY_INDEX }","const inputSchema = require('./utils/validate')\nconst matchmaking = require('./matchmaking')\n\n/**\n * inhouse generator coordinator\n * @param {Array.<Object>} input\n * @returns {Array.<Object>} \n */\nmodule.exports = function(input) {\n  inputSchema.validateSync(input)\n  return matchmaking(input).slice(0,100)\n}\n","const yup = require('yup')\n\n/**\n * yup validation schema for input\n */\nmodule.exports = yup.array()\n.length(10)\n.required()\n.min(10)\n.max(10)\n.of(\n  yup.object({\n    name: yup.string().required(),\n    elo: yup.string().lowercase().required().matches(/(iron(\\d{0}[1-4])?|bronze(\\d{0}[1-4])?|silver(\\d{0}[1-4])?|gold(\\d{0}[1-4])?|platinum(\\d{0}[1-4])?|diamond(\\d{0}[1-4])?|master|grandmaster|challenger)/),\n    roles: yup.array().required().min(0).max(2).of(yup.string().lowercase().matches(/(top|jug|mid|bot|sup)/))\n  }),\n)\n"],"sourceRoot":""}